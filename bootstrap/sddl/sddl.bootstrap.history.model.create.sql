/*------------------------------------------------------------------------------------------------*/
/* Author: Alfred Gerke (AGE)                                                  
/* Date: 2019-02-22                                                        
/* Description: Es wird das Model für die Update-History angelegt    
/*                                                                               
/*------------------------------------------------------------------------------------------------*/
/* - Das Script arbeitet mit Befehlen der SQL-Erweiterung für FB 3.0x   
/* - Das Script ist für die Ausführung im ISQL erstellt worden
/* - Ein Datenbank-Connect wird vorausgesetzt
/*   
/*------------------------------------------------------------------------------------------------*/
/* History: 2019-02-22
/*          Script erstellen
/*   
/*------------------------------------------------------------------------------------------------*/

/*------------------------------------------------------------------------------------------------*/
CREATE TABLE TB_HISTORY_UPDATE(
  ID DN_IDENTIFICATION generated by default as identity primary key, 
  MAJOR DN_MAJOR_NO,
  MINOR DN_MINOR_NO,
  SCRIPT DN_FILENAME_SHORT NOT NULL,
  DESCRIPTION DN_DESCRIPTION,
  CRE_USER DN_CURRENT_USER,
  CRE_DATE DN_CURRENT_TIMESTAMP,
  CHG_USER DN_FIREBIRD_USER,
  CHG_DATE DN_TIMESTAMP
);

COMMENT ON TABLE TB_HISTORY_UPDATE
IS 'Updatehistorie';

COMMENT ON COLUMN TB_HISTORY_UPDATE.ID 
IS 'Primärschlüssel';

COMMENT ON COLUMN TB_HISTORY_UPDATE.MAJOR 
IS 'Hauptversion des Updatescriptes';

COMMENT ON COLUMN TB_HISTORY_UPDATE.MINOR 
IS 'Unterversion des Updatescriptes';

COMMENT ON COLUMN TB_HISTORY_UPDATE.SCRIPT 
IS 'Name des Updatescriptes';

COMMENT ON COLUMN TB_HISTORY_UPDATE.DESCRIPTION 
IS 'Beschreibung zum Updatescript';

COMMENT ON COLUMN TB_HISTORY_UPDATE.CRE_USER 
IS 'Erstellt von';

COMMENT ON COLUMN TB_HISTORY_UPDATE.CRE_DATE 
IS 'Erstellt am';

COMMENT ON COLUMN TB_HISTORY_UPDATE.CHG_USER 
IS 'Bearbeitet von';

COMMENT ON COLUMN TB_HISTORY_UPDATE.CHG_DATE 
IS 'Bearbeitet am';

/*------------------------------------------------------------------------------------------------*/
CREATE VIEW VW_HISTORY_UPDATE(
  ID, 
  MAJOR,
  MINOR,
  SCRIPT,
  DESCRIPTION,
  CRE_USER,
  CRE_DATE,
  CHG_USER,
  CHG_DATE)
AS
select
  ID, 
  MAJOR,
  MINOR,
  SCRIPT,
  DESCRIPTION,
  CRE_USER,
  CRE_DATE,
  CHG_USER,
  CHG_DATE
from      
  TB_HISTORY_UPDATE;
  
COMMENT ON VIEW VW_HISTORY_UPDATE 
IS 'Standard Update-View für die Tabelle TP_HISTORY_UPDATE';
  
/*------------------------------------------------------------------------------------------------*/
SET TERM ^ ;
CREATE TRIGGER TRG_HISTORY_UPDATE_BU0 FOR TB_HISTORY_UPDATE ACTIVE
BEFORE UPDATE POSITION 0
AS
begin
  new.chg_user = PKG_COMMON.SF_GET_CURRENT_USER();
  new.chg_date = current_timestamp;
end^
SET TERM ; ^

/*------------------------------------------------------------------------------------------------*/
CREATE TABLE TB_HISTORY_LOG
(
  ID DN_IDENTIFICATION generated by default as identity primary key, 
  WARN_LEVEL DN_WARN_LEVEL,
  DESCRIPTION DN_DESCRIPTION,
  CRE_USER DN_CURRENT_USER,
  CRE_DATE DN_CURRENT_TIMESTAMP,
  CHG_USER DN_FIREBIRD_USER,
  CHG_DATE DN_TIMESTAMP     
);

COMMENT ON TABLE TB_HISTORY_LOG
IS 'Log-History';

COMMENT ON COLUMN TB_HISTORY_LOG.ID 
IS 'Primärschlüssel';

COMMENT ON COLUMN TB_HISTORY_LOG.WARN_LEVEL 
IS 'Warnlevel (s. Domain DN_WARN_LEVEL)';

COMMENT ON COLUMN TB_HISTORY_LOG.DESCRIPTION 
IS 'Log-Information';

COMMENT ON COLUMN TB_HISTORY_LOG.CRE_USER 
IS 'Erstellt von';

COMMENT ON COLUMN TB_HISTORY_LOG.CRE_DATE 
IS 'Erstellt am';

COMMENT ON COLUMN TB_HISTORY_LOG.CHG_USER 
IS 'Bearbeitet von';

COMMENT ON COLUMN TB_HISTORY_LOG.CHG_DATE 
IS 'Bearbeitet am';

/*------------------------------------------------------------------------------------------------*/
CREATE VIEW VW_HISTORY_LOG (
  ID, 
  WARN_LEVEL,
  DESCRIPTION,
  CRE_USER,
  CRE_DATE,
  CHG_USER,
  CHG_DATE     
)
AS
select
  ID, 
  WARN_LEVEL,
  DESCRIPTION,
  CRE_USER,
  CRE_DATE,
  CHG_USER,
  CHG_DATE
from
  TB_HISTORY_LOG;

COMMENT ON VIEW VW_HISTORY_LOG
IS 'Standard Update-View für die Tabelle TB_HISTORY_LOG';

/*------------------------------------------------------------------------------------------------*/
SET TERM ^ ;
CREATE TRIGGER TRG_HISTORY_LOG_BU0 FOR TB_HISTORY_LOG ACTIVE
BEFORE UPDATE POSITION 0
AS
begin
  new.chg_user = PKG_COMMON.SF_GET_CURRENT_USER();
  new.chg_date = current_timestamp;
end^
SET TERM ; ^

/*------------------------------------------------------------------------------------------------*/
CREATE TABLE TB_HISTORY_DEBUG
(
  ID DN_IDENTIFICATION generated by default as identity primary key,
  CAPTION DN_CAPTION,
  DESCRIPTION DN_DESCRIPTION,
  CRE_USER DN_CURRENT_USER,
  CRE_DATE DN_CURRENT_TIMESTAMP,
  CHG_USER DN_FIREBIRD_USER,
  CHG_DATE DN_TIMESTAMP    
);

COMMENT ON TABLE TB_HISTORY_DEBUG
IS 'Debug-History';

COMMENT ON COLUMN TB_HISTORY_DEBUG.ID 
IS 'Primärschlüssel';

COMMENT ON COLUMN TB_HISTORY_DEBUG.CAPTION 
IS 'Bezeichnung';

COMMENT ON COLUMN TB_HISTORY_DEBUG.DESCRIPTION 
IS 'Beschreibung';

COMMENT ON COLUMN TB_HISTORY_DEBUG.CRE_USER 
IS 'Erstellt von';

COMMENT ON COLUMN TB_HISTORY_DEBUG.CRE_DATE 
IS 'Erstellt am';

COMMENT ON COLUMN TB_HISTORY_DEBUG.CHG_USER 
IS 'Bearbeitet von';

COMMENT ON COLUMN TB_HISTORY_DEBUG.CHG_DATE 
IS 'Bearbeitet am';

/*------------------------------------------------------------------------------------------------*/
CREATE VIEW VW_HISTORY_DEBUG (
  ID,
  CAPTION,
  DESCRIPTION,
  CRE_USER,
  CRE_DATE,
  CHG_USER,
  CHG_DATE     
)
AS
select
  ID,
  CAPTION,
  DESCRIPTION,
  CRE_USER,
  CRE_DATE,
  CHG_USER,
  CHG_DATE
from
  TB_HISTORY_DEBUG;

COMMENT ON VIEW VW_HISTORY_DEBUG
IS 'Standard Update-View für die Tabelle TB_HISTORY_DEBUG';

/*------------------------------------------------------------------------------------------------*/
SET TERM ^ ;
CREATE TRIGGER TRG_HISTORY_DEBUG_BU0 FOR TB_HISTORY_DEBUG ACTIVE
BEFORE UPDATE POSITION 0
AS
begin
  new.chg_user = PKG_COMMON.SF_GET_CURRENT_USER();
  new.chg_date = current_timestamp;
end^
SET TERM ; ^

/*------------------------------------------------------------------------------------------------*/


COMMIT WORK;
/*------------------------------------------------------------------------------------------------*/
/*------------------------------------------------------------------------------------------------*/
/*------------------------------------------------------------------------------------------------*/